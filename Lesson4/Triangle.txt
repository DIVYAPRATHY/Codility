1. Simple solution. Time complexity is O(N*log(N))
import java.util.Arrays;
class Solution {
    public int solution(int[] A) {
        // write your code in Java SE 8
         Arrays.sort(A);  
         if (A.length<3) {
            return 0;    
         }
         for (int i=0;i<A.length-2;i++) {
            if (A[i]+A[i+1]>A[i+2]){  //Will cause overflow if all these three are MaxInteger. Change to A[i]>A[i+2]-A[i+1]
                return 1;
            }         
         }
         
		 return 0;
    }
}
Score: 91%
2. Solution:
import java.util.Arrays;
class Solution {
    public int solution(int[] A) {
        // write your code in Java SE 8
         Arrays.sort(A);  
         if (A.length<3) {
            return 0;    
         }
         for (int i=0;i<A.length-2;i++) {
            if (A[i]>A[i+2]-A[i+1]){  
                return 1;
            }         
         }
         
		 return 0;
    }
}
Score: 100%