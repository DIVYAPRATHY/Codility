1. Simple solution. Time complexity is O(N*log(N)) or O(N).
class Solution {
    public int solution(int[] A) {
        int n = A.length;
        int[] sum = new int[n];
        
        for (int i = 0; i < n; i++) {
            int right = n - i - 1;
            
            if (right >= A[i]){
                right = i + A[i];
            } else {
                right = n - 1;    
            }
            
            sum[right]++;
        }
        
        for (int i = 1; i < n; i++) {
            sum[i] += sum[i - 1];   
        }
        
        long ans = (long) n * (n - 1) / 2;
        
        for (int i = 0; i < n; i++) {
            int left = A[i];
            
            if (left > i) {
                left = 0;
            } else {
                left = i - A[i];    
            }
            
            if (left > 0){
                ans -= sum[left - 1];    
            } 
        }
        
        if (ans > 10000000) {
            return -1;    
        }
        
        return (int) ans;
    }
}
Score: 100%



