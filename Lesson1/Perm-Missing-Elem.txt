
1. This solution is not good. If the number is too large, int is overflow. Double or float is not accurate.

class Solution {
    public int solution(int[] A) {
        // write your code in Java SE 8
        int realSum = 0;
        int N = A.length;
        for (int i=0; i<N;i++){
            realSum = realSum + A[i];            
        }        
        int originalSum = (N+1)*(N+2)/2;
        return (originalSum - realSum);
    }
}

score : 80%

2. This idea is, if A[i]= n, then set A[n-1] = 0. The space j !=0, then return j+1 is missing
class Solution 
{
    public int solution(int[] A) 
    {
        for (int i = 0; i < A.length; i++)
        {
            if (A[i] == 0)
            {
                continue;   
            }
            
            int n = A[i] - 1;
            while (n != -1 && n < A.length)
            {
                int next = A[n] - 1;
                A[n] = 0;
                n = next;
            }
        }
        
        for (int i = 0; i < A.length; i++)
        {
            if (A[i] != 0)
            {
                return i + 1;   
            }
        }
        
        return A.length + 1;
    }
}

score : 100%